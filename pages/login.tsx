import Head from "next/head";
import { useRouter } from "next/router";

import useStorage from "../hook/useStorage";
import React, { useContext, useEffect } from "react";
import { Form, Input, Button, Layout } from "antd";
import Header from "../components/Header";
import { NotificationContext } from "../contexts/NotificationContext";
import { NextPage } from "next";
import { axios } from "../lib/axios";

const { Content } = Layout;

interface LoginInfo {
  email?: string;
  password?: string;
}

const Login: NextPage = () => {
  const { setNotification } = useContext(NotificationContext);
  const { setItem } = useStorage();
  const router = useRouter();

  useEffect((): void => {
    if (router.query?.message === "true") {
      setNotification({
        type: "warning",
        body: "ログインしてください",
      });
    }
  }, [router.query?.message, setNotification]);

  const onSubmit = (values: LoginInfo) => {
    const body = JSON.stringify({
      email: values.email,
      password: values.password,
    });
    axios
      .post(`${process.env.BASE_URL}/users/login`, body)
      .then((res) => {
        if (res.data.token) {
          setItem("token", res.data.token);
          setItem("id", res.data.user.id);
          setNotification({
            type: "success",
            body: "ログインに成功しました",
          });
          router.push({
            pathname: "/",
          });
          return;
        } else {
          setNotification({
            type: "error",
            body: "エラーが発生しました。もう一度試してください",
          });
          return;
        }
      })
      .catch(() => {
        setNotification({
          type: "error",
          body: "メールアドレスまたはパスワードが違います",
        });
        return;
      });
  };

  return (
    <div>
      <Head>
        <title>login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <Content className="main-content">
        <Form
          name="basic"
          labelCol={{ span: 8 }}
          wrapperCol={{ span: 8 }}
          initialValues={{ remember: true }}
          onFinish={onSubmit}
          autoComplete="off"
        >
          <Form.Item label="email" name="email" rules={[{ type: "email" }]}>
            <Input />
          </Form.Item>

          <Form.Item label="password" name="password">
            <Input.Password />
          </Form.Item>

          <Form.Item wrapperCol={{ offset: 8, span: 16 }}>
            <Button type="primary" htmlType="submit">
              Login
            </Button>
          </Form.Item>
        </Form>
      </Content>
    </div>
  );
};

export default Login;
